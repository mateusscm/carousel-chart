{"version":3,"sources":["styles/global.js","assets/icons/RightArrow.js","assets/icons/LeftArrow.js","components/Charts/ChartBar.js","components/Charts/ChartLine.js","components/Charts/ChartPie.js","components/Card/style.js","components/Card/index.js","components/Slider/style.js","components/Slider/index.js","views/HomePage/style.js","data/fake-data.js","views/HomePage/index.js","index.js"],"names":["createGlobalStyle","RightArrow","width","height","viewBox","fill","xmlns","d","LeftArrow","ChartBar","chartInfo","defaultColor","ResponsiveContainer","BarChart","data","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","verticalAlign","Brush","stroke","color2","startIndex","endIndex","Bar","stackId","color1","color3","ChartLine","LineChart","Line","type","renderActiveShape","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","payload","percent","value","RADIAN","Math","PI","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","x","y","dy","name","Sector","r","toFixed","ChartPie","useState","newInfo","setNewInfo","convertColor","setConvertColor","activeIndex","setActiveIndex","useEffect","aux","reduce","acc","cur","Object","keys","forEach","item","result","map","e","key","PieChart","Pie","activeShape","labelLine","onMouseEnter","index","entry","Cell","length","CardContainer","styled","div","Card","chartData","className","text","SliderSection","section","Dots","span","current","css","Slider","charts","setCurrent","prevSlide","nextSlide","onClick","info","id","idx","MainContainer","main","ContainerSelectColor","HomePage","setDefaultColor","handleChangeColor","color","Array","isArray","role","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94148acf.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\nimport \"./fonts.css\";\r\n\r\nexport default createGlobalStyle`\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n}\r\nbody {\r\n    background: #EFEFBB;  /* fallback for old browsers */\r\n    background: -webkit-linear-gradient(to right, #D4D3DD, #EFEFBB);  /* Chrome 10-25, Safari 5.1-6 */\r\n    background: linear-gradient(to right, #D4D3DD, #EFEFBB); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\r\n    font-size: 14px;\r\n    color: #000;\r\n    font-family: 'Nunito', sans-serif;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    }\r\n\r\n    main {\r\n        width: 1000px;\r\n        background-color: transparent;\r\n        height: auto;\r\n        transition: width 0.5s ease-in-out;\r\n\r\n        @media screen and (max-width: 1024px) {\r\n            width: 700px;\r\n        }\r\n\r\n        @media screen and (max-width: 800px) {\r\n            width: 600px;\r\n        }\r\n\r\n        @media screen and (max-width: 600px) {\r\n            width: 90vw;\r\n        }\r\n    }\r\n`;\r\n","import React from 'react';\r\n\r\n// import { Container } from './styles';\r\n\r\nfunction RightArrow() {\r\n  return (\r\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M7.19995 18L13.2 12L7.19995 6.00002L8.39995 3.60002L16.8 12L8.39995 20.4L7.19995 18Z\" fill=\"black\"/>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default RightArrow;","import React from 'react';\r\n\r\n// import { Container } from './styles';\r\n\r\nfunction LeftArrow() {\r\n  return (\r\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M16.8 18L10.8 12L16.8 6.00002L15.6 3.60002L7.20005 12L15.6 20.4L16.8 18Z\" fill=\"black\"/>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default LeftArrow;","import PropTypes from \"prop-types\";\r\nimport React from 'react';\r\nimport {\r\n    BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Brush\r\n  } from 'recharts';\r\n\r\nfunction ChartBar({chartInfo, defaultColor}) {\r\n  return (\r\n    <ResponsiveContainer>\r\n        <BarChart\r\n          data={chartInfo}\r\n          margin={{\r\n            top: 5, right: 30, left: 5, bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend verticalAlign=\"top\" height={36}/>\r\n          <Brush dataKey='name' height={10} stroke={defaultColor?.color2} startIndex={0} endIndex={50}/>\r\n          <Bar dataKey=\"company_A\" stackId=\"a\" fill={defaultColor?.color1} />\r\n          <Bar dataKey=\"company_B\" stackId=\"a\" fill={defaultColor?.color2} />\r\n          <Bar dataKey=\"company_C\" stackId=\"a\" fill={defaultColor?.color3} />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n}\r\n\r\nChartBar.propTypes = {\r\n  chartInfo: PropTypes.array.isRequired,\r\n  defaultColor: PropTypes.shape({\r\n    color1: PropTypes.string,\r\n    color2: PropTypes.string,\r\n    color3: PropTypes.string,\r\n  }).isRequired,\r\n}\r\n\r\nexport default ChartBar;","import PropTypes from \"prop-types\";\r\nimport React from 'react';\r\nimport {\r\n  ResponsiveContainer, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Brush\r\n} from 'recharts';\r\n\r\nfunction ChartLine({chartInfo, defaultColor}) {\r\n  return (\r\n    <ResponsiveContainer>\r\n\r\n      <LineChart\r\n          data={chartInfo}\r\n          margin={{\r\n            top: 5, right: 30, left: 5, bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend verticalAlign=\"top\" height={36}/>\r\n          <Brush dataKey='name' height={10} stroke={defaultColor?.color2} startIndex={0} endIndex={50}/>\r\n          <Line type=\"monotone\" dataKey=\"company_A\" stroke={defaultColor?.color1} />\r\n          <Line type=\"monotone\" dataKey=\"company_B\" stroke={defaultColor?.color2} />\r\n          <Line type=\"monotone\" dataKey=\"company_C\" stroke={defaultColor?.color3} />\r\n        </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n\r\n}\r\n\r\nChartLine.propTypes = {\r\n  chartInfo: PropTypes.array.isRequired,\r\n  defaultColor: PropTypes.shape({\r\n    color1: PropTypes.string,\r\n    color2: PropTypes.string,\r\n    color3: PropTypes.string,\r\n  }).isRequired,\r\n}\r\n\r\nexport default ChartLine;","import PropTypes from \"prop-types\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  ResponsiveContainer, PieChart, Pie, Sector, Cell,\r\n} from 'recharts';\r\n\r\nconst renderActiveShape = ({cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle,\r\n\tfill, payload, percent, value,}) => {\r\n\tconst RADIAN = Math.PI / 180;\r\n\tconst sin = Math.sin(-RADIAN * midAngle);\r\n\tconst cos = Math.cos(-RADIAN * midAngle);\r\n\tconst sx = cx + (outerRadius + 10) * cos;\r\n\tconst sy = cy + (outerRadius + 10) * sin;\r\n\tconst mx = cx + (outerRadius + 30) * cos;\r\n\tconst my = cy + (outerRadius + 30) * sin;\r\n\tconst ex = mx + (cos >= 0 ? 1 : -1) * 22;\r\n\tconst ey = my;\r\n\tconst textAnchor = cos >= 0 ? 'start' : 'end';\r\n\r\n\treturn (\r\n\t\t<g>\r\n\t\t\t<text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>{payload.name}</text>\r\n\t\t\t<Sector\r\n\t\t\t\tcx={cx}\r\n\t\t\t\tcy={cy}\r\n\t\t\t\tinnerRadius={innerRadius}\r\n\t\t\t\touterRadius={outerRadius}\r\n\t\t\t\tstartAngle={startAngle}\r\n\t\t\t\tendAngle={endAngle}\r\n\t\t\t\tfill={fill}\r\n\t\t\t/>\r\n\t\t\t<Sector\r\n\t\t\t\tcx={cx}\r\n\t\t\t\tcy={cy}\r\n\t\t\t\tstartAngle={startAngle}\r\n\t\t\t\tendAngle={endAngle}\r\n\t\t\t\tinnerRadius={outerRadius + 6}\r\n\t\t\t\touterRadius={outerRadius + 10}\r\n\t\t\t\tfill={fill}\r\n\t\t\t/>\r\n\t\t\t<path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\" />\r\n\t\t\t<circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\r\n\t\t\t<text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor} fill=\"#333\">{`Valor: ${value}`}</text>\r\n\t\t\t<text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} dy={18} textAnchor={textAnchor} fill=\"#999\">\r\n\t\t\t\t{`(Porcentagem: ${(percent * 100).toFixed(2)}%)`}\r\n\t\t\t</text>\r\n\t\t</g>\r\n\t);\r\n};\r\n\r\nfunction ChartPie({chartInfo , defaultColor}) {\r\n  const [newInfo, setNewInfo] = useState([]);\r\n  const [convertColor, setConvertColor] = useState([]);\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n\r\n  const onPieEnter = (data, index) => {\r\n    setActiveIndex(index);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const aux = chartInfo.reduce(\r\n      // eslint-disable-next-line no-sequences\r\n      (acc, cur) => (Object.keys(cur).forEach(item => (acc[item] = (acc[item] || 0) + cur[item])), acc), {}\r\n    );\r\n\r\n    const result = Object.keys(aux).map(e => ({name: e, value: aux[e]}));\r\n    \r\n    setNewInfo(result);\r\n  }, [chartInfo]);\r\n\r\n  useEffect(() => {\r\n\t  const result = Object.keys(defaultColor).map((key) => defaultColor[key]);\r\n\r\n\t  setConvertColor(result);\r\n  }, [defaultColor]);\r\n\r\n  return (\r\n    <ResponsiveContainer>\r\n      <PieChart>\r\n          <Pie \r\n            activeIndex={activeIndex}\r\n            activeShape={renderActiveShape}\r\n            data={newInfo}\r\n            innerRadius={60}\r\n            outerRadius={80}\r\n            fill=\"#8884d8\"\r\n\t\t\tdataKey=\"value\"\r\n\t\t\tlabelLine\r\n            onMouseEnter={onPieEnter}\r\n          >\r\n            {\r\n\t\t\t\tnewInfo.map((entry, index) => <Cell key={`cell-${index}`} fill={convertColor[index % convertColor.length]} />)\r\n\t\t\t}\r\n\t\t  </Pie>\r\n          {/* <Tooltip /> */}\r\n        </PieChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n\r\nChartPie.propTypes = {\r\n  chartInfo: PropTypes.array.isRequired,\r\n  defaultColor: PropTypes.objectOf(PropTypes.string).isRequired,\r\n}\r\n\r\nexport default ChartPie;","import styled from \"styled-components\";\r\n\r\nexport const CardContainer = styled.div`\r\n  position: relative;\r\n  background-color: white;\r\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2),\r\n    0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\r\n  width: 100%;\r\n  height: 300px;\r\n  border-radius: 20px;\r\n  \r\n  /* overflow: hidden; */\r\n\r\n  .badge {\r\n    position: absolute;\r\n    display: inline-block;\r\n    right: -10px;\r\n    top: 0;\r\n    margin: 5px 0px;\r\n    border-radius: 4px;\r\n    text-transform: capitalize;\r\n    color: #fff;\r\n    background-color: #7e8aad;\r\n    padding: 5px 10px;\r\n    font-size: 0.9rem;\r\n    font-weight: bold;\r\n\r\n    &::after {\r\n      content: \"\";\r\n      display: block;\r\n      width: 10px;\r\n      height: 10px;\r\n      background-color: #999;\r\n      position: absolute;\r\n      right: 4px;\r\n      bottom: -3px;\r\n      z-index: -1;\r\n      transform: rotate(45deg);\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { ChartBar, ChartLine, ChartPie } from \"../Charts\";\r\nimport * as S from \"./style\";\r\n\r\nfunction Card({ data, chartData, defaultColor }) {\r\n  const handleTypeChart = (type) => {\r\n    if (type === 'bar') {\r\n      return <ChartBar chartInfo={chartData} defaultColor={defaultColor} />\r\n    } else if (type === 'column') {\r\n      return <ChartLine chartInfo={chartData} defaultColor={defaultColor} />\r\n    } else {\r\n      return <ChartPie chartInfo={chartData} defaultColor={defaultColor} />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <S.CardContainer>\r\n      {/* <span>{data?.id}</span>\r\n      <span>{data?.type}</span> */}\r\n      <span className=\"badge\">{data?.text}</span>\r\n      {handleTypeChart(data?.type)}\r\n    </S.CardContainer>\r\n  );\r\n}\r\n\r\nCard.propTypes = {\r\n  chartData: PropTypes.array.isRequired,\r\n  data: PropTypes.shape({\r\n    text: PropTypes.string,\r\n    type: PropTypes.string\r\n  }).isRequired,\r\n  defaultColor: PropTypes.objectOf(PropTypes.string).isRequired,\r\n}\r\n\r\nexport default Card;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const SliderSection = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n  padding: 0px 45px;\r\n  width: 100%;\r\n\r\n  .slide {\r\n    opacity: 0;\r\n    transition-duration: 1s ease;\r\n    transform: translateX(0px);\r\n  }\r\n\r\n  .slide.active {\r\n    opacity: 1;\r\n    transition-duration: 1s;\r\n  }\r\n\r\n  .container-dots {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-top: 20px;\r\n  }\r\n\r\n  @media screen and (max-width: 600px) {\r\n    padding: 0px;\r\n  }\r\n\r\n  button {\r\n    border: none;\r\n    display: flex;\r\n    align-items: center;\r\n    width: 30px;\r\n    justify-content: center;\r\n    height: 30px;\r\n    border-radius: 50%;\r\n    outline: none;\r\n    cursor: pointer;\r\n    background-color: blue;\r\n\r\n    &:hover {\r\n      background-color: darkblue;\r\n      box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2),\r\n        0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\r\n    }\r\n\r\n    &:active {\r\n      background-color: darkblue;\r\n      box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2),\r\n        0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\r\n    }\r\n\r\n    & svg > path {\r\n      fill: white;\r\n    }\r\n  }\r\n\r\n  .right {\r\n    position: absolute;\r\n    right: -13px;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    z-index: 10;\r\n\r\n    & > svg {\r\n      padding-left: 3px;\r\n    }\r\n\r\n    @media screen and (max-width: 600px) {\r\n      top: 98%;\r\n    }\r\n  }\r\n\r\n  .left {\r\n    position: absolute;\r\n    left: 16px;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    z-index: 10;\r\n\r\n    & > svg {\r\n      padding-right: 3px;\r\n    }\r\n\r\n    @media screen and (max-width: 600px) {\r\n      top: 98%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Dots = styled.span`\r\n  width: 10px;\r\n  height: 10px;\r\n  border-radius: 50%;\r\n  margin: 0px 5px;\r\n  transition: transform 0.2s ease-in;\r\n  background-color: #666;\r\n  cursor: pointer;\r\n\r\n  ${({ current }) =>\r\n    current &&\r\n    css`\r\n      background-color: blue;\r\n      border: 1px solid blue;\r\n      transform: scale(1.2);\r\n      box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2),\r\n        0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\r\n    `}\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { LeftArrow, RightArrow } from \"../../assets/icons\";\r\nimport Card from \"../Card\";\r\nimport * as S from \"./style\";\r\nimport chartData from \"../../data/data\";\r\n\r\nfunction Slider({\r\n  charts,\r\n  current,\r\n  setCurrent,\r\n  prevSlide,\r\n  nextSlide,\r\n  defaultColor,\r\n}) {\r\n  return (\r\n    <S.SliderSection>\r\n      <button className=\"left\" onClick={prevSlide}>\r\n        <LeftArrow />\r\n      </button>\r\n      <button className=\"right\" onClick={nextSlide}>\r\n        <RightArrow />\r\n      </button>\r\n      {charts.map((info, index) => {\r\n        return (\r\n          <div\r\n            key={info?.id}\r\n            className={index === current ? \"slide active\" : \"slide\"}\r\n          >\r\n            {index === current && (\r\n              <Card\r\n                data={info}\r\n                chartData={chartData}\r\n                defaultColor={defaultColor}\r\n              />\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n      <div className=\"container-dots\">\r\n        {charts.map((idx) => {\r\n          return (\r\n            <S.Dots\r\n              key={idx?.id}\r\n              current={idx.id - 1 === current}\r\n              onClick={() => setCurrent(idx.id - 1)}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </S.SliderSection>\r\n  );\r\n}\r\n\r\nSlider.propTypes = {\r\n  charts: PropTypes.array.isRequired,\r\n  current: PropTypes.number.isRequired,\r\n  defaultColor: PropTypes.objectOf(PropTypes.string).isRequired,\r\n  nextSlide: PropTypes.func.isRequired,\r\n  prevSlide: PropTypes.func.isRequired,\r\n  setCurrent: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Slider;\r\n","import styled from \"styled-components\";\r\n\r\nexport const MainContainer = styled.main`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: 150px;\r\n`;\r\n\r\nexport const ContainerSelectColor = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin: 10px 0px;\r\n  width: 100%;\r\n  padding-right: 45px;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    padding-right: 0px;\r\n  }\r\n\r\n  & > div {\r\n    display: flex;\r\n    position: relative;\r\n    width: 7rem;\r\n    margin-left: 10px;\r\n    cursor: pointer;\r\n\r\n    & span {\r\n      width: 3rem;\r\n      height: 3rem;\r\n      border-radius: 50%;\r\n      box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2),\r\n        0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\r\n    }\r\n\r\n    .azul {\r\n      background-color: #003c96;\r\n      z-index: 1;\r\n    }\r\n    .roxo1 {\r\n      background-color: #59254e;\r\n      position: absolute;\r\n      left: 30px;\r\n      z-index: 2;\r\n    }\r\n    .vermelho {\r\n      background-color: #b40e07;\r\n      position: absolute;\r\n      left: 60px;\r\n      z-index: 3;\r\n    }\r\n\r\n    .verde {\r\n      background-color: #08934b;\r\n      z-index: 1;\r\n    }\r\n    .musgo {\r\n      background-color: #6d7a2a;\r\n      position: absolute;\r\n      left: 30px;\r\n      z-index: 2;\r\n    }\r\n    .laranja {\r\n      background-color: #cc620a;\r\n      position: absolute;\r\n      left: 60px;\r\n      z-index: 3;\r\n    }\r\n\r\n    .amarelo {\r\n      background-color: #e2bd03;\r\n      z-index: 1;\r\n    }\r\n    .rosa {\r\n      background-color: #b26768;\r\n      position: absolute;\r\n      left: 30px;\r\n      z-index: 2;\r\n    }\r\n    .roxo {\r\n      background-color: #8312cc;\r\n      position: absolute;\r\n      left: 60px;\r\n      z-index: 3;\r\n    }\r\n  }\r\n`;\r\n","const data = [\r\n  {\r\n    id: 1,\r\n    type: \"bar\",\r\n    text: \"Bar Chart\",\r\n  },\r\n  {\r\n    id: 2,\r\n    type: \"pie\",\r\n    text: \"Pie Chart\",\r\n  },\r\n  {\r\n    id: 3,\r\n    type: \"column\",\r\n    text: \"Column Chart\",\r\n  },\r\n];\r\n\r\nexport default data;\r\n","import React, { useState } from \"react\";\r\nimport Slider from \"../../components/Slider\";\r\nimport * as S from \"./style\";\r\nimport data from \"../../data/fake-data\";\r\n\r\nfunction HomePage() {\r\n  const [current, setCurrent] = useState(0);\r\n  const length = data.length;\r\n\r\n  const [defaultColor, setDefaultColor] = useState({\r\n    color1: \"#003C96\",\r\n    color2: \"#59254E\",\r\n    color3: \"#B40E07\",\r\n  });\r\n\r\n  const nextSlide = () => {\r\n    setCurrent(current === length - 1 ? 0 : current + 1);\r\n  };\r\n\r\n  const prevSlide = () => {\r\n    setCurrent(current === 0 ? length - 1 : current - 1);\r\n  };\r\n\r\n  const handleChangeColor = (color) => {\r\n    if (color === \"green\") {\r\n      setDefaultColor({\r\n        color1: \"#08934B\",\r\n        color2: \"#6D7A2A\",\r\n        color3: \"#CC620A\",\r\n      });\r\n    } else if (color === \"yellow\") {\r\n      setDefaultColor({\r\n        color1: \"#E2BD03\",\r\n        color2: \"#B26768\",\r\n        color3: \"#8312CC\",\r\n      });\r\n    } else {\r\n      setDefaultColor({\r\n        color1: \"#003C96\",\r\n        color2: \"#59254E\",\r\n        color3: \"#B40E07\",\r\n      });\r\n    }\r\n  };\r\n\r\n  if (!Array.isArray(data) || data.length <= 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <S.MainContainer>\r\n      <S.ContainerSelectColor>\r\n        <div\r\n          role=\"button\"\r\n          className=\"btn-azul\"\r\n          onClick={() => handleChangeColor(\"blue\")}\r\n        >\r\n          <span className=\"azul\" />\r\n          <span className=\"roxo1\" />\r\n          <span className=\"vermelho\" />\r\n        </div>\r\n        <div\r\n          role=\"button\"\r\n          className=\"btn-verde\"\r\n          onClick={() => handleChangeColor(\"green\")}\r\n        >\r\n          <span className=\"verde\" />\r\n          <span className=\"musgo\" />\r\n          <span className=\"laranja\" />\r\n        </div>\r\n        <div\r\n          role=\"button\"\r\n          className=\"btn-amarelo\"\r\n          onClick={() => handleChangeColor(\"yellow\")}\r\n        >\r\n          <span className=\"amarelo\" />\r\n          <span className=\"rosa\" />\r\n          <span className=\"roxo\" />\r\n        </div>\r\n      </S.ContainerSelectColor>\r\n      <Slider\r\n        prevSlide={prevSlide}\r\n        nextSlide={nextSlide}\r\n        charts={data}\r\n        current={current}\r\n        setCurrent={setCurrent}\r\n        defaultColor={defaultColor}\r\n      />\r\n    </S.MainContainer>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport GlobalStyles from \"./styles/global\";\r\nimport HomePage from \"./views/HomePage\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GlobalStyles />\r\n    <HomePage />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}